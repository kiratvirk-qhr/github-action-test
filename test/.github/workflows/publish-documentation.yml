name: Publish Medeo database documentation

on:
  workflow_dispatch:
    inputs:
      ref_to_publish:
        description: "Tag or Branch you wish to publish eg. v12.0.0 or releases/12.0.0"
        required: true
        default: ""
    release:
      types: [created]


permissions:
  contents: read
  pages: write
  id-token: write

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

  ORG_GRADLE_PROJECT_ciArtifactoryUsername: 'github-actions'
  ORG_GRADLE_PROJECT_ciArtifactoryApiKey: "${{ secrets.ARTIFACTORY_API_KEY }}"

  JAVA_VERSION: "11"
  JAVA_DISTRIBUTION: "zulu"

concurrency:
  group: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.ref_to_publish || github.ref }}
  cancel-in-progress: false

jobs:
  generate-documentation:
    environment:
      name: github-pages
    name: Generate Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      postgres:
        image: qhrprdcrpss01ccacrdnucleus01.azurecr.io/qhrtech.com/medeo-florence/third-party/postgres:main
        credentials:
          username: ${{ secrets.ACR_AGENT_PULL_QHRPRDCRPSS01CCACRDNUCLEUS01_USERNAME }}
          password: ${{ secrets.ACR_AGENT_PULL_QHRPRDCRPSS01CCACRDNUCLEUS01_PASSWORD }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.ref_to_publish || github.ref }}
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Configure Artifactory
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_ENV_1: ${{ secrets.ARTIFACTORY_CLI_CONFIG }}

      - name: Setup Liquibase
        run: |
            LIQUIBASE_VERSION=$(cat liquibase.version)
            mkdir liquibase
            jfrog rt dl qhr-maven-thirdparty/com/qhrtech/medeo/medeo-marrow/liquibase/$LIQUIBASE_VERSION/liquibase-$LIQUIBASE_VERSION.tgz liquibase/ --flat
            tar -zxf liquibase/liquibase-$LIQUIBASE_VERSION.tgz -C liquibase/

      - name: Scheme Update
        run: |
          LIQUIBASE_CMD=liquibase/liquibase script/liquibase-wrapper update

      - name: Generate Documentation
        run: ./gradlew schemaspy

      - name: Zip docs
        run: |
          BASEDIR=$(pwd)
          LATEST_TAG=$(git describe --tags)
          cd ./build/schemaspy
          zip -r $BASEDIR/medeo-marrow-docs-$LATEST_TAG.zip .

      - name: Publish to Artifactory
        run: |
          jfrog rt u "*.zip" "qhr-local-maven-zip-nonprod/com/qhrtech/codescope/medeo/medeo-marrow/"
